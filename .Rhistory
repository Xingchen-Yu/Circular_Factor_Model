}
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(as.symbol(dup_name))
for(dup_name in dup_name_freq$bioname){
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname = dup_name)
}
for(dup_name in dup_name_freq$bioname){
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name)
}
print(
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name))
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
pivot_long()
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
pivot_longer()
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
pivot_longer(cols = everything())
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
pivot_longer(cols = -c(bioname,icpsr))
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
pivot_longer(cols = c(bioname,icpsr))
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
pivot_longer(cols = c(bioname))
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name)
temp
c2
congress_all %>% select(icpsr,cast_code,congress,rollnumber) %>% filter(congress == house_number)
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name)
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>% t()
library(tidyverse)
congress_all = read_csv('./data/Hall_votes.csv',guess_max = 20000)
congress_member = read_csv('./data/HSall_members.csv',guess_max = 20000)
congress_bills = read_csv('./data/Hall_rollcalls.csv',guess_max = 20000,col_types = cols(session = col_character(),
clerk_rollnumber = col_character(),vote_result = col_character(),vote_question = col_character(),vote_desc = col_character()))
H116_bills = read_csv('./data/H116_rollcalls.csv',guess_max =20000)
congress_all %>% glimpse()
congress_member %>% glimpse()
H116_bills %>% glimpse()
H116_bills$bill_number
###############################
congress_all %>% select(icpsr,cast_code,congress,rollnumber) %>% filter(congress %in% c(100:116)) %>%
count(cast_code)
## only three parties in 100 to 116
congress_member %>% filter(congress %in% c(100:116)) %>%
count(party_code)
congress_all %>% select(icpsr,cast_code,congress,rollnumber) %>% filter(congress == 116) %>%
count(cast_code)
h116_pol_info = congress_member %>% filter(congress == 116) %>% select(party_code,icpsr,bioname,state_abbrev,district_code) %>%
mutate(party = case_when(party_code == 100~'D',party_code == 200~'R',party_code==328~'I')) %>%
mutate(name_district  = paste0(bioname," (",party,' ',state_abbrev,"-",district_code,")")) %>%
select(icpsr,name_district,bioname)
###############################
h116 = congress_all %>% select(icpsr,cast_code,congress,rollnumber) %>% filter(congress == 116) %>%
mutate(cast_code = case_when(cast_code %in% c(1:3) ~ 1, cast_code %in% c(4:6) ~0,TRUE~NA_real_)) %>%
# inner_join(H116_bills %>% select(rollnumber,))
pivot_wider(names_from = rollnumber, values_from = cast_code) %>% select(-congress)
apply(h116 %>% select(-icpsr),2,function(x) sum(x,na.rm=T)) == H116_bills$yea_count
apply(h116 %>% select(-icpsr),2,function(x) sum(x,na.rm=T)) == H116_bills$yea_count
## check yea and nah count
temp = h116 %>% select(-icpsr) %>% summarise(across(everything(),function(x) sum(x,na.rm = T)))
near(as.numeric(unlist(temp)),H116_bills$yea_count)
temp2= h116 %>% select(-icpsr) %>% summarise(across(everything(),function(x) length(which(x==0))))
near(as.numeric(unlist(temp2)),H116_bills$nay_count)
congress_all %>% select(icpsr,cast_code,congress,rollnumber) %>% filter(congress == 116) %>%
summarise(count = n_distinct(rollnumber))
h116_all = h116 %>% left_join(h116_pol_info,by = "icpsr")
temp = h116_all %>% select(-bioname,-name_district,-icpsr)
temp2 = apply(temp ,1,function(x) length(which(is.na(x)==T))) / ncol(temp )
temp3 = which(temp2>0.4)
h116_all %>% group_by(bioname) %>%  mutate(n = n()) %>% filter(n>1) %>%
select(bioname,name_district)
h116_all %>% count(bioname) %>% filter(n>1)
h116_all[temp3,] %>% select(bioname)
house_list = c(100:116)
dup_list = yes_no_list = vector('list',17)
for(i in 1:17){
cat("\rProgress: ",i,"/",17)
house_number = house_list[i]
c1 = congress_member %>% filter(congress == house_number) %>% select(party_code,icpsr,bioname,state_abbrev,district_code) %>%
mutate(party = case_when(party_code == 100~'D',party_code == 200~'R',party_code==328~'I')) %>%
mutate(name_district  = paste0(bioname," (",party,' ',state_abbrev,"-",district_code,")")) %>%
select(icpsr,name_district,bioname)
c2 = congress_all %>% select(icpsr,cast_code,congress,rollnumber) %>% filter(congress == house_number) %>%
mutate(cast_code = case_when(cast_code %in% c(1:3) ~ 1, cast_code %in% c(4:6) ~0,TRUE~NA_real_)) %>%
pivot_wider(names_from = rollnumber, values_from = cast_code) %>% select(-congress)
c_bills = congress_bills %>% filter(congress == house_number)
temp = c2 %>%select(-icpsr) %>%  summarise(across(everything(),function(x) sum(x,na.rm = T)))
t1 = sum(near(as.numeric(unlist(temp)),c_bills$yea_count)) == length(temp)
###H115 anomaly for yes_no_list, after checking, it's trump's votes! 99912 is trump
# as_tibble(as.numeric(unlist(temp)) - c_bills$yea_count) %>% mutate(rollnumber=c_bills$rollnumber) %>%
#   filter(value!=0) %>% print(n=Inf) %>% inner_join(  congress_all %>% select(icpsr,cast_code,congress,rollnumber)
#                                                      %>% filter(congress == house_number),by=c("rollnumber") ) %>%
#   select(-icpsr,-congress) %>% group_by(rollnumber) %>% count(cast_code) %>%
#   pivot_wider(names_from = cast_code,values_from = n) %>% print(n = Inf) %>% inner_join(c_bills %>%
#                                     select(rollnumber,yea_count),by=c("rollnumber")) %>% print(n=Inf) %>%
# inner_join(c2 %>% filter(icpsr==99912) %>% pivot_longer(cols=-icpsr) %>% rename(rollnumber = name) %>%
#              mutate(rollnumber = as.numeric(rollnumber) )%>% select(-icpsr),
#  by=c("rollnumber")) %>% mutate(corrected_yea = yea_count + value) %>%
#   mutate(check = `1`==corrected_yea)%>% print(n = Inf)
#
###
temp2 = c2 %>%select(-icpsr) %>%  summarise(across(everything(),function(x) length(which(x==0))))
t2 = sum(near(as.numeric(unlist(temp2)),c_bills$nay_count)) == length(temp)
yes_no_list[[i]] = c(t1,t2)
c3 = c2 %>% left_join(c1,by = "icpsr")
dup_list[[i]] = c3 %>% group_by(bioname) %>%  mutate(n = n()) %>% filter(n>1) %>%
select(bioname,name_district) %>% arrange(desc(name_district))
### combine rows
dup_name_freq = c3 %>% count(bioname) %>%  filter(n>1)  %>% select(-n)
dup_name_freq$bioname
dup_name_freq %>% inner_join(c3, by = "bioname")
for(dup_name in dup_name_freq$bioname){
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>% t
)))
i = 17
cat("\rProgress: ",i,"/",17)
house_number = house_list[i]
c1 = congress_member %>% filter(congress == house_number) %>% select(party_code,icpsr,bioname,state_abbrev,district_code) %>%
mutate(party = case_when(party_code == 100~'D',party_code == 200~'R',party_code==328~'I')) %>%
mutate(name_district  = paste0(bioname," (",party,' ',state_abbrev,"-",district_code,")")) %>%
select(icpsr,name_district,bioname)
c2 = congress_all %>% select(icpsr,cast_code,congress,rollnumber) %>% filter(congress == house_number) %>%
mutate(cast_code = case_when(cast_code %in% c(1:3) ~ 1, cast_code %in% c(4:6) ~0,TRUE~NA_real_)) %>%
pivot_wider(names_from = rollnumber, values_from = cast_code) %>% select(-congress)
c_bills = congress_bills %>% filter(congress == house_number)
temp = c2 %>%select(-icpsr) %>%  summarise(across(everything(),function(x) sum(x,na.rm = T)))
t1 = sum(near(as.numeric(unlist(temp)),c_bills$yea_count)) == length(temp)
#                                                      %>% filter(congress == house_number),by=c("rollnumber") ) %>%
#   select(-icpsr,-congress) %>% group_by(rollnumber) %>% count(cast_code) %>%
#   pivot_wider(names_from = cast_code,values_from = n) %>% print(n = Inf) %>% inner_join(c_bills %>%
#                                     select(rollnumber,yea_count),by=c("rollnumber")) %>% print(n=Inf) %>%
# inner_join(c2 %>% filter(icpsr==99912) %>% pivot_longer(cols=-icpsr) %>% rename(rollnumber = name) %>%
#              mutate(rollnumber = as.numeric(rollnumber) )%>% select(-icpsr),
#  by=c("rollnumber")) %>% mutate(corrected_yea = yea_count + value) %>%
#   mutate(check = `1`==corrected_yea)%>% print(n = Inf)
#
###
temp2 = c2 %>%select(-icpsr) %>%  summarise(across(everything(),function(x) length(which(x==0))))
t2 = sum(near(as.numeric(unlist(temp2)),c_bills$nay_count)) == length(temp)
yes_no_list[[i]] = c(t1,t2)
c3 = c2 %>% left_join(c1,by = "icpsr")
dup_list[[i]] = c3 %>% group_by(bioname) %>%  mutate(n = n()) %>% filter(n>1) %>%
select(bioname,name_district) %>% arrange(desc(name_district))
### combine rows
dup_name_freq = c3 %>% count(bioname) %>%  filter(n>1)  %>% select(-n)
dup_name_freq$bioname
dup_name_freq %>% inner_join(c3, by = "bioname")
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>% t
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name)
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>% select(-bioname,-icpsr) %>%
t()
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>% select(-bioname,-icpsr)
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>% select(-bioname,-icpsr) %>%
gather(value = everything() )
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>% select(-bioname,-icpsr)
apply
sum(NA,NA)
is.na(c(NA,NA))
sum(is.na(c(NA,NA)))
is.na(c(NA,1))
is.na(c(NA,1)) == T
is.na(c(NA,1)) == F
c(NA,1)[is.na(c(NA,1)) == F]
c(NA,0)[is.na(c(NA,0)) == F]
aggregate_votes = function(x){
if(sum(is.na(x)) == 2){
x_mod = x
}else{
x_mod = x[is.na(x) == F]
}
return(x_mod)
}
apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>% select(-bioname,-icpsr) %>%
rowwise, 2, aggregate_votes)
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>% select(-bioname,-icpsr) %>%
rowwise, 2, aggregate_votes))
apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>% select(-bioname,-icpsr) %>%
rowwise, 2, aggregate_votes)
str(  apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>% select(-bioname,-icpsr) %>%
rowwise, 2, aggregate_votes))
aggregate_votes = function(x){
if(sum(is.na(x)) == 2){
x_mod = NA
}else{
x_mod = x[is.na(x) == F]
}
return(x_mod)
}
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>% select(-bioname,-icpsr) %>%
rowwise, 2, aggregate_votes))
as_tibble(list(x = c(1,NA),y=c(NA,NA),z =(NA,0)))
as_tibble(list(x = c(1,NA),y=c(NA,NA),z =c(NA,0)))
apply(as_tibble(list(x = c(1,NA),y=c(NA,NA),z =c(NA,0))),2,aggregate_votes)
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
rowwise, 2, aggregate_votes))
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>% select(-bioname,-icpsr) %>%
rowwise, 2, aggregate_votes))
apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>% select(-bioname,-icpsr) %>%
rowwise, 2, aggregate_votes)
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
select(-bioname,-icpsr-name_district) %>%
rowwise, 2, aggregate_votes))
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
#select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))
as_tibble
apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes)
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
#select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
#select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes)) %>% t()
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,]
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,]
c3
c3
c3 %>% select(icpsr,bioname,name_district)
c3 %>% filter(bioname !%in% dup_name_freq$bioname)
c3 %>% filter(!bioname %in% dup_name_freq$bioname)
c3
c3 %>% filter(!bioname %in% dup_name_freq$bioname)
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname)
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,]
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name)
c3_new
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
c3_new
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,]
dup_name_freq %>% inner_join(c3, by = "bioname",keep = T)
dup_name_freq %>% inner_join(c3, by = "bioname")
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname)
c3_new
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
c3_new
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,]
as.numeric(NA)
aggregate_votes = function(x){
if(sum(is.na(x)) == 2){
x_mod = NA
}else{
x_mod = x[is.na(x) == F]
}
return(as.numeric(x_mod))
}
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname)
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
c3_new
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,]
length(" asdfasdf")
aggregate_votes = function(x){
if(sum(is.na(x)) == 2){
x_mod = NA
}else{
x_mod = x[is.na(x) == F]
if(!is.na(as.numeric(x_mod))){
x_mod = as.numeric(x_mod)
}
}
return(x_mod)
}
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname)
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
warnings()
as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,]
c3_new
c3_new %>% filter(bionmae %in% dup_name_freq$bioname)
c3_new %>% filter(bioname %in% dup_name_freq$bioname)
dup_name_freq$bioname
aggregate_votes(dup_name_freq$bioname[1])
aggregate_votes(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])
)
aggregate_votes(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])
)
aggregate_votes = function(x){
if(sum(is.na(x)) == 2){
x_mod = NA
}else{
x_mod = x[is.na(x) == F]
# if(!is.na(as.numeric(x_mod))){
x_mod = as.numeric(x_mod)
# }
}
return(x_mod)
}
aggregate_votes(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1]))
aggregate_votes = function(x){
if(sum(is.na(x)) == 2){
x_mod = NA
}else{
x_mod = x[is.na(x) == F]
# if(!is.na(as.numeric(x_mod))){
# x_mod = as.numeric(x_mod)
# }
}
return(x_mod)
}
aggregate_votes(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1]))
is.na(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])) == F
!is.na(as.numeric(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])))
!is.na(as.numeric(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])))
aggregate_votes = function(x){
if(sum(is.na(x)) == 2){
x_mod = NA
}else{
x_mod = x[is.na(x) == F]
if(!is.na(as.numeric(x_mod))){
x_mod = as.numeric(x_mod)
}
}
return(x_mod)
}
c3_new
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname,name_district)
c3_new
dup_name_freq$bioname
dup_name_freq %>% inner_join(c3, by = "bioname")
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
warnings()
!is.na(as.numeric(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])))
aggregate_votes = function(x){
if(sum(is.na(x)) == 2){
x_mod = NA
}else{
x_mod = x[is.na(x) == F]
if(sum(!is.na(as.numeric(x_mod)))==0){
x_mod = as.numeric(x_mod)
}
}
return(x_mod)
}
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname,name_district)
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
aggregate_votes = function(x){
if(sum(is.na(x)) == 2){
x_mod = NA
}else{
x_mod = x[is.na(x) == F]
if(is.na(as.numeric(x_mod))){
x_mod = as.numeric(x_mod)
}
}
return(x_mod)
}
aggregate_votes = function(x){
if(sum(is.na(x)) == 2){
x_mod = NA
}else{
x_mod = x[is.na(x) == F]
if(sum(!is.na(as.numeric(x_mod)))==0){
x_mod = as.numeric(x_mod)
}
}
return(x_mod)
}
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname)
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname)
dup_name_freq$bioname
dup_name_freq %>% inner_join(c3, by = "bioname")
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
aggregate_votes = function(x){
if(sum(is.na(x)) == 2){
x_mod = NA
}else{
x_mod = x[is.na(x) == F]
if(sum(is.na(as.numeric(x_mod)))==2){
x_mod = as.numeric(x_mod)
}
}
return(x_mod)
}
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname,name_district)
dup_name_freq$bioname
dup_name_freq %>% inner_join(c3, by = "bioname")
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname)
dup_name_freq$bioname
dup_name_freq %>% inner_join(c3, by = "bioname")
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
is.na(as.numeric(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])))
sum(is.na(as.numeric(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1]))))
aggregate_votes = function(x){
if(sum(is.na(x)) == 2){
x_mod = NA
}else{
x_mod = x[is.na(x) == F]
if(sum(is.na(as.numeric(x_mod)))!=2){
x_mod = as.numeric(x_mod)
}
}
return(x_mod)
}
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname)
dup_name_freq$bioname
dup_name_freq %>% inner_join(c3, by = "bioname")
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
aggregate_votes = function(x){
if(sum(is.na(x)) == 2){
x_mod = NA
}else{
x_mod = x[is.na(x) == F]
if(suppressWarnings(sum(is.na(as.numeric(x_mod)))!=2)){
x_mod = as.numeric(x_mod)
}
}
return(x_mod)
}
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname,)
dup_name_freq$bioname
dup_name_freq %>% inner_join(c3, by = "bioname")
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
c3_new
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname,name_district)
dup_name_freq$bioname
dup_name_freq %>% inner_join(c3, by = "bioname")
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
c3_new
c3_new %>% filter(bioname %in% dup_name_freq$bioname)
dup_name_freq %>% inner_join(c3, by = "bioname")
dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name)
