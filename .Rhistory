a = do.call('rbind',lapply(dup_list_pivot,nrow))
a[which(a>0)]
a = do.call('cbind',lapply(dup_list_pivot,nrow))
apply(a,1,function(x) which(x>0))
a
# c(NA,0)[is.na(c(NA,0)) == F]
aggregate_votes = function(x){
if(sum(is.na(x)) == 2){
x_mod = NA
}else{
x_mod = x[is.na(x) == F]
if(suppressWarnings(sum(is.na(as.numeric(x_mod)))!=2)){
x_mod = as.numeric(x_mod)
}
}
return(x_mod)
}
### combine rows
dup_name_freq = c3 %>% count(bioname) %>%  filter(n>1)  %>% select(-n)
house_number = house_list[i]
c1 = congress_member %>% filter(congress == house_number) %>% select(party_code,icpsr,bioname,state_abbrev,district_code) %>%
mutate(party = case_when(party_code == 100~'D',party_code == 200~'R',party_code==328~'I')) %>%
mutate(name_district  = paste0(bioname," (",party,' ',state_abbrev,"-",district_code,")")) %>%
select(icpsr,name_district,bioname)
c2 = congress_all %>% select(icpsr,cast_code,congress,rollnumber) %>% filter(congress == house_number) %>%
mutate(cast_code = case_when(cast_code %in% c(1:3) ~ 1, cast_code %in% c(4:6) ~0,TRUE~NA_real_)) %>%
pivot_wider(names_from = rollnumber, values_from = cast_code) %>% select(-congress)
c_bills = congress_bills %>% filter(congress == house_number)
temp = c2 %>%select(-icpsr) %>%  summarise(across(everything(),function(x) sum(x,na.rm = T)))
t1 = sum(near(as.numeric(unlist(temp)),c_bills$yea_count)) == length(temp)
#                                                      %>% filter(congress == house_number),by=c("rollnumber") ) %>%
#   select(-icpsr,-congress) %>% group_by(rollnumber) %>% count(cast_code) %>%
#   pivot_wider(names_from = cast_code,values_from = n) %>% print(n = Inf) %>% inner_join(c_bills %>%
#                                     select(rollnumber,yea_count),by=c("rollnumber")) %>% print(n=Inf) %>%
# inner_join(c2 %>% filter(icpsr==99912) %>% pivot_longer(cols=-icpsr) %>% rename(rollnumber = name) %>%
#              mutate(rollnumber = as.numeric(rollnumber) )%>% select(-icpsr),
#  by=c("rollnumber")) %>% mutate(corrected_yea = yea_count + value) %>%
#   mutate(check = `1`==corrected_yea)%>% print(n = Inf)
#
###
temp2 = c2 %>%select(-icpsr) %>%  summarise(across(everything(),function(x) length(which(x==0))))
t2 = sum(near(as.numeric(unlist(temp2)),c_bills$nay_count)) == length(temp)
yes_no_list[[i]] = c(t1,t2)
c3 = c2 %>% left_join(c1,by = "icpsr")
dup_list[[i]] = c3 %>% group_by(bioname) %>%  mutate(n = n()) %>% filter(n>1) %>%
select(bioname,name_district) %>% arrange(desc(name_district))
### combine rows
dup_name_freq = c3 %>% count(bioname) %>%  filter(n>1)  %>% select(-n)
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname,name_district)
dup_name_freq$bioname
dup_name_freq %>% inner_join(c3, by = "bioname")
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
c3_new
c3_new %>% filter(bioname %in% dup_name_freq$bioname)
c3_new %>% rowwise() %>% mutate(missing_prop = across(-c(1:3),rowSums)/ n_bills)
c3_new %>% rowwise() %>% mutate(missing_prop = across(-c(bioname,name_district,icpsr),rowSums)/ n_bills)
n_bills = nrow(c3_new) - 3
n_bills
c3_new %>% rowwise() %>% mutate(missing_prop = across(-c(bioname,name_district,icpsr),rowSums)/ n_bills)
c3_new %>% rowwise() %>% mutate(missing_prop = across(-c(bioname,name_district,icpsr),sum)/ n_bills)
c3_new %>% rowwise() %>% mutate(missing_prop = across(-c(bioname,name_district,icpsr),sum)/ n_bills)
c3_new  %>% mutate(missing_prop = across(-c(bioname,name_district,icpsr),sum)/ n_bills)
c3_new  %>% mutate(missing_prop = across(-c(bioname,name_district,icpsr),sum)/ n_bills) %>% select(missing_prop)
c3_new  %>% rowwise() %>% summarise(missing_prop = across(-c(bioname,name_district,icpsr),sum)/ n_bills)
c3_new[,-c(1:3)]
apply(c3_new[,-c(1:3)],1,sum)
apply(c3_new[,-c(1:3)],1,function(x) length(is.na(x)))
apply(c3_new[,-c(1:3)],1,function(x) length(!is.na(x)))
apply(c3_new[,-c(1:3)],1,function(x) length(!is.na(x)==T))
is.na(x)==T
apply(c3_new[,-c(1:3)],1,function(x) sum(is.na(x))/n_bills)
apply(c3_new[,-c(1:3)],1,function(x) sum(is.na(x)==T)/n_bills)
is.na(c3_new[1,-c(1:3)])
n_bills = ncol(c3_new) - 3
apply(c3_new[,-c(1:3)],1,function(x) sum(is.na(x)==T)/n_bills)
c3_new  %>% rowwise() %>% summarise(missing_prop = across(-c(bioname,name_district,icpsr),function(x) sum(is.na(x)==T))/ n_bills)
c_across
c3_new %>% mutate(missing_bills = sum(is.na(c_across(where(-bioname,-name_district,-icpsr)))==T)/n_bills)
c3_new %>% mutate(missing_bills = sum(is.na(c_across(where(-c(bioname,-name_district,-icpsr))))==T)/n_bills)
c3_new %>% mutate(missing_bills = sum(is.na(c_across(where(-c(bioname,name_district,icpsr))))==T)/n_bills)
apply(c3_new %>% select(-bionmae,name_district,icpsr),1,function(x) sum(is.na(x)==T)/n_bills)
apply(c3_new %>% select(-bioname,-name_district,-icpsr),1,function(x) sum(is.na(x)==T)/n_bills)
c3_new %>% select(bioname)
c3_new %>% select(bioname) %>% mutate(missing_prop = missing_prop)
missing_prop = apply(c3_new %>% select(-bioname,-name_district,-icpsr),1,function(x) sum(is.na(x)==T)/n_bills)
c3_new %>% select(bioname) %>% mutate(missing_prop = missing_prop)
c3_new %>% select(bioname) %>% mutate(missing_prop = missing_prop) %>% filter(missing_prop>0.4)
c3_new %>% select(bioname) %>% mutate(missing_prop = missing_prop) %>% filter(missing_prop>0.4) %>%
inner_join(dup_name_freq)
# c(NA,0)[is.na(c(NA,0)) == F]
aggregate_votes = function(x){
if(sum(is.na(x)) == 2){
x_mod = NA
}else{
x_mod = x[is.na(x) == F]
if(suppressWarnings(sum(is.na(as.numeric(x_mod)))!=2)){
x_mod = as.numeric(x_mod)
}
}
return(x_mod)
}
# aggregate_votes(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1]))
# is.na(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])) == F
# !is.na(as.numeric(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])))
# sum(is.na(as.numeric(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1]))))
# apply(as_tibble(list(x = c(1,NA),y=c(NA,NA),z =c(NA,0))),2,aggregate_votes)
for(i in 1:17){
cat("\rProgress: ",i,"/",17)
house_number = house_list[i]
c1 = congress_member %>% filter(congress == house_number) %>% select(party_code,icpsr,bioname,state_abbrev,district_code) %>%
mutate(party = case_when(party_code == 100~'D',party_code == 200~'R',party_code==328~'I')) %>%
mutate(name_district  = paste0(bioname," (",party,' ',state_abbrev,"-",district_code,")")) %>%
select(icpsr,name_district,bioname)
c2 = congress_all %>% select(icpsr,cast_code,congress,rollnumber) %>% filter(congress == house_number) %>%
mutate(cast_code = case_when(cast_code %in% c(1:3) ~ 1, cast_code %in% c(4:6) ~0,TRUE~NA_real_)) %>%
pivot_wider(names_from = rollnumber, values_from = cast_code) %>% select(-congress)
c_bills = congress_bills %>% filter(congress == house_number)
temp = c2 %>%select(-icpsr) %>%  summarise(across(everything(),function(x) sum(x,na.rm = T)))
t1 = sum(near(as.numeric(unlist(temp)),c_bills$yea_count)) == length(temp)
###H115 anomaly for yes_no_list, after checking, it's trump's votes! 99912 is trump
# as_tibble(as.numeric(unlist(temp)) - c_bills$yea_count) %>% mutate(rollnumber=c_bills$rollnumber) %>%
#   filter(value!=0) %>% print(n=Inf) %>% inner_join(  congress_all %>% select(icpsr,cast_code,congress,rollnumber)
#                                                      %>% filter(congress == house_number),by=c("rollnumber") ) %>%
#   select(-icpsr,-congress) %>% group_by(rollnumber) %>% count(cast_code) %>%
#   pivot_wider(names_from = cast_code,values_from = n) %>% print(n = Inf) %>% inner_join(c_bills %>%
#                                     select(rollnumber,yea_count),by=c("rollnumber")) %>% print(n=Inf) %>%
# inner_join(c2 %>% filter(icpsr==99912) %>% pivot_longer(cols=-icpsr) %>% rename(rollnumber = name) %>%
#              mutate(rollnumber = as.numeric(rollnumber) )%>% select(-icpsr),
#  by=c("rollnumber")) %>% mutate(corrected_yea = yea_count + value) %>%
#   mutate(check = `1`==corrected_yea)%>% print(n = Inf)
#
###
temp2 = c2 %>%select(-icpsr) %>%  summarise(across(everything(),function(x) length(which(x==0))))
t2 = sum(near(as.numeric(unlist(temp2)),c_bills$nay_count)) == length(temp)
yes_no_list[[i]] = c(t1,t2)
c3 = c2 %>% left_join(c1,by = "icpsr")
dup_list[[i]] = c3 %>% group_by(bioname) %>%  mutate(n = n()) %>% filter(n>1) %>%
select(bioname,name_district) %>% arrange(desc(name_district))
### combine rows
dup_name_freq = c3 %>% count(bioname) %>%  filter(n>1)  %>% select(-n)
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname,name_district)
dup_name_freq$bioname
dup_name_freq %>% inner_join(c3, by = "bioname")
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
n_bills = ncol(c3_new) - 3
missing_prop = apply(c3_new %>% select(-bioname,-name_district,-icpsr),1,function(x) sum(is.na(x)==T)/n_bills)
missing_40_percent = c3_new %>% select(bioname) %>% mutate(missing_prop = missing_prop) %>% filter(missing_prop>0.4)
missing_list[[i]] = missing_40_percent
dup_missing_list[[i]] = missing_40_percent %>% inner_join(dup_name_freq)
# c3_new %>% filter(bioname %in% dup_name_freq$bioname)
###########
# c3 %>% group_by(bioname) %>%  mutate(n = n()) %>% filter(n>1) %>%
# select(bioname,name_district) %>% arrange(desc(name_district))
###########
dup_list[[i]]$name_district = gsub("\\)","",gsub(".*\\(","",dup_list[[i]]$name_district))
rm(c1)
rm(c2)
rm(c3)
rm(c_bills)
rm(t1)
rm(t2)
rm(temp2)
rm(temp)
}
house_list = c(100:116)
dup_list = yes_no_list = missing_list = dup_missing_list = vector('list',17)
# aggregate_votes(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1]))
# is.na(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])) == F
# !is.na(as.numeric(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])))
# sum(is.na(as.numeric(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1]))))
# apply(as_tibble(list(x = c(1,NA),y=c(NA,NA),z =c(NA,0))),2,aggregate_votes)
for(i in 1:17){
cat("\rProgress: ",i,"/",17)
house_number = house_list[i]
c1 = congress_member %>% filter(congress == house_number) %>% select(party_code,icpsr,bioname,state_abbrev,district_code) %>%
mutate(party = case_when(party_code == 100~'D',party_code == 200~'R',party_code==328~'I')) %>%
mutate(name_district  = paste0(bioname," (",party,' ',state_abbrev,"-",district_code,")")) %>%
select(icpsr,name_district,bioname)
c2 = congress_all %>% select(icpsr,cast_code,congress,rollnumber) %>% filter(congress == house_number) %>%
mutate(cast_code = case_when(cast_code %in% c(1:3) ~ 1, cast_code %in% c(4:6) ~0,TRUE~NA_real_)) %>%
pivot_wider(names_from = rollnumber, values_from = cast_code) %>% select(-congress)
c_bills = congress_bills %>% filter(congress == house_number)
temp = c2 %>%select(-icpsr) %>%  summarise(across(everything(),function(x) sum(x,na.rm = T)))
t1 = sum(near(as.numeric(unlist(temp)),c_bills$yea_count)) == length(temp)
###H115 anomaly for yes_no_list, after checking, it's trump's votes! 99912 is trump
# as_tibble(as.numeric(unlist(temp)) - c_bills$yea_count) %>% mutate(rollnumber=c_bills$rollnumber) %>%
#   filter(value!=0) %>% print(n=Inf) %>% inner_join(  congress_all %>% select(icpsr,cast_code,congress,rollnumber)
#                                                      %>% filter(congress == house_number),by=c("rollnumber") ) %>%
#   select(-icpsr,-congress) %>% group_by(rollnumber) %>% count(cast_code) %>%
#   pivot_wider(names_from = cast_code,values_from = n) %>% print(n = Inf) %>% inner_join(c_bills %>%
#                                     select(rollnumber,yea_count),by=c("rollnumber")) %>% print(n=Inf) %>%
# inner_join(c2 %>% filter(icpsr==99912) %>% pivot_longer(cols=-icpsr) %>% rename(rollnumber = name) %>%
#              mutate(rollnumber = as.numeric(rollnumber) )%>% select(-icpsr),
#  by=c("rollnumber")) %>% mutate(corrected_yea = yea_count + value) %>%
#   mutate(check = `1`==corrected_yea)%>% print(n = Inf)
#
###
temp2 = c2 %>%select(-icpsr) %>%  summarise(across(everything(),function(x) length(which(x==0))))
t2 = sum(near(as.numeric(unlist(temp2)),c_bills$nay_count)) == length(temp)
yes_no_list[[i]] = c(t1,t2)
c3 = c2 %>% left_join(c1,by = "icpsr")
dup_list[[i]] = c3 %>% group_by(bioname) %>%  mutate(n = n()) %>% filter(n>1) %>%
select(bioname,name_district) %>% arrange(desc(name_district))
### combine rows
dup_name_freq = c3 %>% count(bioname) %>%  filter(n>1)  %>% select(-n)
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname,name_district)
dup_name_freq$bioname
dup_name_freq %>% inner_join(c3, by = "bioname")
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
n_bills = ncol(c3_new) - 3
missing_prop = apply(c3_new %>% select(-bioname,-name_district,-icpsr),1,function(x) sum(is.na(x)==T)/n_bills)
missing_40_percent = c3_new %>% select(bioname) %>% mutate(missing_prop = missing_prop) %>% filter(missing_prop>0.4)
missing_list[[i]] = missing_40_percent
dup_missing_list[[i]] = missing_40_percent %>% inner_join(dup_name_freq)
# c3_new %>% filter(bioname %in% dup_name_freq$bioname)
###########
# c3 %>% group_by(bioname) %>%  mutate(n = n()) %>% filter(n>1) %>%
# select(bioname,name_district) %>% arrange(desc(name_district))
###########
dup_list[[i]]$name_district = gsub("\\)","",gsub(".*\\(","",dup_list[[i]]$name_district))
rm(c1)
rm(c2)
rm(c3)
rm(c_bills)
rm(t1)
rm(t2)
rm(temp2)
rm(temp)
}
# aggregate_votes(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1]))
# is.na(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])) == F
# !is.na(as.numeric(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])))
# sum(is.na(as.numeric(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1]))))
# apply(as_tibble(list(x = c(1,NA),y=c(NA,NA),z =c(NA,0))),2,aggregate_votes)
for(i in 1:17){
cat("\rProgress: ",i,"/",17)
house_number = house_list[i]
c1 = congress_member %>% filter(congress == house_number) %>% select(party_code,icpsr,bioname,state_abbrev,district_code) %>%
mutate(party = case_when(party_code == 100~'D',party_code == 200~'R',party_code==328~'I')) %>%
mutate(name_district  = paste0(bioname," (",party,' ',state_abbrev,"-",district_code,")")) %>%
select(icpsr,name_district,bioname)
c2 = congress_all %>% select(icpsr,cast_code,congress,rollnumber) %>% filter(congress == house_number) %>%
mutate(cast_code = case_when(cast_code %in% c(1:3) ~ 1, cast_code %in% c(4:6) ~0,TRUE~NA_real_)) %>%
pivot_wider(names_from = rollnumber, values_from = cast_code) %>% select(-congress)
c_bills = congress_bills %>% filter(congress == house_number)
temp = c2 %>%select(-icpsr) %>%  summarise(across(everything(),function(x) sum(x,na.rm = T)))
t1 = sum(near(as.numeric(unlist(temp)),c_bills$yea_count)) == length(temp)
###H115 anomaly for yes_no_list, after checking, it's trump's votes! 99912 is trump
# as_tibble(as.numeric(unlist(temp)) - c_bills$yea_count) %>% mutate(rollnumber=c_bills$rollnumber) %>%
#   filter(value!=0) %>% print(n=Inf) %>% inner_join(  congress_all %>% select(icpsr,cast_code,congress,rollnumber)
#                                                      %>% filter(congress == house_number),by=c("rollnumber") ) %>%
#   select(-icpsr,-congress) %>% group_by(rollnumber) %>% count(cast_code) %>%
#   pivot_wider(names_from = cast_code,values_from = n) %>% print(n = Inf) %>% inner_join(c_bills %>%
#                                     select(rollnumber,yea_count),by=c("rollnumber")) %>% print(n=Inf) %>%
# inner_join(c2 %>% filter(icpsr==99912) %>% pivot_longer(cols=-icpsr) %>% rename(rollnumber = name) %>%
#              mutate(rollnumber = as.numeric(rollnumber) )%>% select(-icpsr),
#  by=c("rollnumber")) %>% mutate(corrected_yea = yea_count + value) %>%
#   mutate(check = `1`==corrected_yea)%>% print(n = Inf)
#
###
temp2 = c2 %>%select(-icpsr) %>%  summarise(across(everything(),function(x) length(which(x==0))))
t2 = sum(near(as.numeric(unlist(temp2)),c_bills$nay_count)) == length(temp)
yes_no_list[[i]] = c(t1,t2)
c3 = c2 %>% left_join(c1,by = "icpsr")
dup_list[[i]] = c3 %>% group_by(bioname) %>%  mutate(n = n()) %>% filter(n>1) %>%
select(bioname,name_district) %>% arrange(desc(name_district))
### combine rows
dup_name_freq = c3 %>% count(bioname) %>%  filter(n>1)  %>% select(-n)
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname,name_district)
# dup_name_freq$bioname
# dup_name_freq %>% inner_join(c3, by = "bioname")
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
n_bills = ncol(c3_new) - 3
missing_prop = apply(c3_new %>% select(-bioname,-name_district,-icpsr),1,function(x) sum(is.na(x)==T)/n_bills)
missing_40_percent = c3_new %>% select(bioname) %>% mutate(missing_prop = missing_prop) %>% filter(missing_prop>0.4)
missing_list[[i]] = missing_40_percent
dup_missing_list[[i]] = missing_40_percent %>% inner_join(dup_name_freq)
# c3_new %>% filter(bioname %in% dup_name_freq$bioname)
###########
# c3 %>% group_by(bioname) %>%  mutate(n = n()) %>% filter(n>1) %>%
# select(bioname,name_district) %>% arrange(desc(name_district))
###########
dup_list[[i]]$name_district = gsub("\\)","",gsub(".*\\(","",dup_list[[i]]$name_district))
rm(c1)
rm(c2)
rm(c3)
rm(c_bills)
rm(t1)
rm(t2)
rm(temp2)
rm(temp)
}
missing_prop = apply(c3_new %>% select(-bioname,-name_district,-icpsr),1,function(x) sum(is.na(x)==T)/n_bills)
missing_40_percent = c3_new %>% select(bioname) %>% mutate(missing_prop = missing_prop) %>% filter(missing_prop>0.4)
missing_list[[i]] = missing_40_percent
dup_missing_list[[i]] = missing_40_percent %>% inner_join(dup_name_freq)
missing_40_percent %>% inner_join(dup_name_freq)
dup_missing_list[[i]] = missing_40_percent %>% inner_join(dup_name_freq,by=bioname)
dup_missing_list[[i]] = missing_40_percent %>% inner_join(dup_name_freq,by=c('bioname'))
# aggregate_votes(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1]))
# is.na(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])) == F
# !is.na(as.numeric(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])))
# sum(is.na(as.numeric(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1]))))
# apply(as_tibble(list(x = c(1,NA),y=c(NA,NA),z =c(NA,0))),2,aggregate_votes)
for(i in 1:17){
cat("\rProgress: ",i,"/",17)
house_number = house_list[i]
c1 = congress_member %>% filter(congress == house_number) %>% select(party_code,icpsr,bioname,state_abbrev,district_code) %>%
mutate(party = case_when(party_code == 100~'D',party_code == 200~'R',party_code==328~'I')) %>%
mutate(name_district  = paste0(bioname," (",party,' ',state_abbrev,"-",district_code,")")) %>%
select(icpsr,name_district,bioname)
c2 = congress_all %>% select(icpsr,cast_code,congress,rollnumber) %>% filter(congress == house_number) %>%
mutate(cast_code = case_when(cast_code %in% c(1:3) ~ 1, cast_code %in% c(4:6) ~0,TRUE~NA_real_)) %>%
pivot_wider(names_from = rollnumber, values_from = cast_code) %>% select(-congress)
c_bills = congress_bills %>% filter(congress == house_number)
temp = c2 %>%select(-icpsr) %>%  summarise(across(everything(),function(x) sum(x,na.rm = T)))
t1 = sum(near(as.numeric(unlist(temp)),c_bills$yea_count)) == length(temp)
###H115 anomaly for yes_no_list, after checking, it's trump's votes! 99912 is trump
# as_tibble(as.numeric(unlist(temp)) - c_bills$yea_count) %>% mutate(rollnumber=c_bills$rollnumber) %>%
#   filter(value!=0) %>% print(n=Inf) %>% inner_join(  congress_all %>% select(icpsr,cast_code,congress,rollnumber)
#                                                      %>% filter(congress == house_number),by=c("rollnumber") ) %>%
#   select(-icpsr,-congress) %>% group_by(rollnumber) %>% count(cast_code) %>%
#   pivot_wider(names_from = cast_code,values_from = n) %>% print(n = Inf) %>% inner_join(c_bills %>%
#                                     select(rollnumber,yea_count),by=c("rollnumber")) %>% print(n=Inf) %>%
# inner_join(c2 %>% filter(icpsr==99912) %>% pivot_longer(cols=-icpsr) %>% rename(rollnumber = name) %>%
#              mutate(rollnumber = as.numeric(rollnumber) )%>% select(-icpsr),
#  by=c("rollnumber")) %>% mutate(corrected_yea = yea_count + value) %>%
#   mutate(check = `1`==corrected_yea)%>% print(n = Inf)
#
###
temp2 = c2 %>%select(-icpsr) %>%  summarise(across(everything(),function(x) length(which(x==0))))
t2 = sum(near(as.numeric(unlist(temp2)),c_bills$nay_count)) == length(temp)
yes_no_list[[i]] = c(t1,t2)
c3 = c2 %>% left_join(c1,by = "icpsr")
dup_list[[i]] = c3 %>% group_by(bioname) %>%  mutate(n = n()) %>% filter(n>1) %>%
select(bioname,name_district) %>% arrange(desc(name_district))
### combine rows
dup_name_freq = c3 %>% count(bioname) %>%  filter(n>1)  %>% select(-n)
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname,name_district)
# dup_name_freq$bioname
# dup_name_freq %>% inner_join(c3, by = "bioname")
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
n_bills = ncol(c3_new) - 3
missing_prop = apply(c3_new %>% select(-bioname,-name_district,-icpsr),1,function(x) sum(is.na(x)==T)/n_bills)
missing_40_percent = c3_new %>% select(bioname) %>% mutate(missing_prop = missing_prop) %>% filter(missing_prop>0.4)
missing_list[[i]] = missing_40_percent
dup_missing_list[[i]] = missing_40_percent %>% inner_join(dup_name_freq,by=c('bioname'))
# c3_new %>% filter(bioname %in% dup_name_freq$bioname)
###########
# c3 %>% group_by(bioname) %>%  mutate(n = n()) %>% filter(n>1) %>%
# select(bioname,name_district) %>% arrange(desc(name_district))
###########
dup_list[[i]]$name_district = gsub("\\)","",gsub(".*\\(","",dup_list[[i]]$name_district))
rm(c1)
rm(c2)
rm(c3)
rm(c_bills)
rm(t1)
rm(t2)
rm(temp2)
rm(temp)
}
names(dup_list) = names(yes_no_list) = paste0('H',100:116)
names(dup_list) = names(yes_no_list) = names(missing_list) = names(dup_missing_list) = paste0('H',100:116)
dup_list_pivot = lapply(dup_list,function(x) x %>% group_by(bioname) %>% mutate(row = row_number()) %>%
pivot_wider(names_from = bioname,values_from=name_district) %>% select(-row))
dup_list_pivot
a = do.call('cbind',lapply(dup_list_pivot,nrow))
apply(a,1,function(x) which(x>0))
yes_no_list
missing_list
dup_missing_list
dup_list_pivot
dup_name_freq
dup_missing_list[[i]] = dup_name_freq %>% inner_join(missing_40_percent,by=c('bioname'),fill=NA)
# aggregate_votes(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1]))
# is.na(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])) == F
# !is.na(as.numeric(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1])))
# sum(is.na(as.numeric(c(dup_name_freq$bioname[1],dup_name_freq$bioname[1]))))
# apply(as_tibble(list(x = c(1,NA),y=c(NA,NA),z =c(NA,0))),2,aggregate_votes)
for(i in 1:17){
cat("\rProgress: ",i,"/",17)
house_number = house_list[i]
c1 = congress_member %>% filter(congress == house_number) %>% select(party_code,icpsr,bioname,state_abbrev,district_code) %>%
mutate(party = case_when(party_code == 100~'D',party_code == 200~'R',party_code==328~'I')) %>%
mutate(name_district  = paste0(bioname," (",party,' ',state_abbrev,"-",district_code,")")) %>%
select(icpsr,name_district,bioname)
c2 = congress_all %>% select(icpsr,cast_code,congress,rollnumber) %>% filter(congress == house_number) %>%
mutate(cast_code = case_when(cast_code %in% c(1:3) ~ 1, cast_code %in% c(4:6) ~0,TRUE~NA_real_)) %>%
pivot_wider(names_from = rollnumber, values_from = cast_code) %>% select(-congress)
c_bills = congress_bills %>% filter(congress == house_number)
temp = c2 %>%select(-icpsr) %>%  summarise(across(everything(),function(x) sum(x,na.rm = T)))
t1 = sum(near(as.numeric(unlist(temp)),c_bills$yea_count)) == length(temp)
###H115 anomaly for yes_no_list, after checking, it's trump's votes! 99912 is trump
# as_tibble(as.numeric(unlist(temp)) - c_bills$yea_count) %>% mutate(rollnumber=c_bills$rollnumber) %>%
#   filter(value!=0) %>% print(n=Inf) %>% inner_join(  congress_all %>% select(icpsr,cast_code,congress,rollnumber)
#                                                      %>% filter(congress == house_number),by=c("rollnumber") ) %>%
#   select(-icpsr,-congress) %>% group_by(rollnumber) %>% count(cast_code) %>%
#   pivot_wider(names_from = cast_code,values_from = n) %>% print(n = Inf) %>% inner_join(c_bills %>%
#                                     select(rollnumber,yea_count),by=c("rollnumber")) %>% print(n=Inf) %>%
# inner_join(c2 %>% filter(icpsr==99912) %>% pivot_longer(cols=-icpsr) %>% rename(rollnumber = name) %>%
#              mutate(rollnumber = as.numeric(rollnumber) )%>% select(-icpsr),
#  by=c("rollnumber")) %>% mutate(corrected_yea = yea_count + value) %>%
#   mutate(check = `1`==corrected_yea)%>% print(n = Inf)
#
###
temp2 = c2 %>%select(-icpsr) %>%  summarise(across(everything(),function(x) length(which(x==0))))
t2 = sum(near(as.numeric(unlist(temp2)),c_bills$nay_count)) == length(temp)
yes_no_list[[i]] = c(t1,t2)
c3 = c2 %>% left_join(c1,by = "icpsr")
dup_list[[i]] = c3 %>% group_by(bioname) %>%  mutate(n = n()) %>% filter(n>1) %>%
select(bioname,name_district) %>% arrange(desc(name_district))
### combine rows
dup_name_freq = c3 %>% count(bioname) %>%  filter(n>1)  %>% select(-n)
c3_new = c3 %>% filter(!bioname %in% dup_name_freq$bioname) %>% relocate(bioname,name_district)
# dup_name_freq$bioname
# dup_name_freq %>% inner_join(c3, by = "bioname")
for(dup_name in dup_name_freq$bioname){
c3_new = bind_rows(c3_new,as_tibble(apply(dup_name_freq %>% inner_join(c3, by = "bioname") %>% filter(bioname == dup_name) %>%
# select(-bioname,-icpsr,-name_district) %>%
rowwise, 2, aggregate_votes))[1,])
}
n_bills = ncol(c3_new) - 3
missing_prop = apply(c3_new %>% select(-bioname,-name_district,-icpsr),1,function(x) sum(is.na(x)==T)/n_bills)
missing_40_percent = c3_new %>% select(bioname) %>% mutate(missing_prop = missing_prop) %>% filter(missing_prop>0.4)
missing_list[[i]] = missing_40_percent
dup_missing_list[[i]] = dup_name_freq %>% inner_join(missing_40_percent,by=c('bioname'),fill=NA)
# c3_new %>% filter(bioname %in% dup_name_freq$bioname)
###########
# c3 %>% group_by(bioname) %>%  mutate(n = n()) %>% filter(n>1) %>%
# select(bioname,name_district) %>% arrange(desc(name_district))
###########
dup_list[[i]]$name_district = gsub("\\)","",gsub(".*\\(","",dup_list[[i]]$name_district))
rm(c1)
rm(c2)
rm(c3)
rm(c_bills)
rm(t1)
rm(t2)
rm(temp2)
rm(temp)
}
names(dup_list) = names(yes_no_list) = names(missing_list) = names(dup_missing_list) = paste0('H',100:116)
dup_list_pivot = lapply(dup_list,function(x) x %>% group_by(bioname) %>% mutate(row = row_number()) %>%
pivot_wider(names_from = bioname,values_from=name_district) %>% select(-row))
dup_list_pivot
a = do.call('cbind',lapply(dup_list_pivot,nrow))
apply(a,1,function(x) which(x>0))
yes_no_list ## trump stupid
missing_list
dup_missing_list
missing_40_percent
dup_name_freq %>% inner_join(missing_40_percent,by=c('bioname'),fill=NA)
dup_missing_list
dup_list
dup_name_freq
missing_list
dup_missing_list
unlist(dup_missing_list)
dup_list
lapply(dup_list,function(x) x %>% select(bioname) %>% distinct())
dup_missing_list
do.call('rbind',lapply(dup_list,function(x) x %>% select(bioname) %>% distinct()))
lapply(dup_list,function(x) x %>% select(bioname) %>% distinct())
dup_missing_list
lapply(dup_list,function(x) x %>% select(bioname) %>% distinct())
dup_missing_list
dup_missing_list
dup_list
dup_list
dup_list
dup_missing_list
dup_list
dup_missing_list
dup_list
dup_missing_list
dup_list
dup_missing_list
dup_missing_list
dup_missing_list
dup_list
dup_missing_list
dup_list
dup_missing_list
dup_list
missing_list
## run H116, H111,H110, h108, H107, H106, H104, H103
missing_list$H113 %>% print(n=Inf)
dup_list
congress_member %>% filter(congress == house_number) %>% select(party_code,icpsr,bioname,state_abbrev,district_code)
c1$bioname
congress_member %>% filter(congress == house_number) %>% select(bioname)
